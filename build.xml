<?xml version="1.0"?>
<!--
 *
 * Copyright (c) FaZend.com
 * All rights reserved.
 *
 * You can use this product "as is" without any warranties from authors.
 * You can change the product only through Google Code repository
 * at http://code.google.com/p/fazend
 * If you have any questions about privacy, please email privacy@fazend.com
 *
 * @copyright Copyright (c) FaZend.com
 * @version $Id$
 * @category FaZend
 *
 * This Phing build file. For more information see this document:
 * http://phing.info/docs/guide/current/
 *
-->
<project name="fazend tests" basedir="." default="main">
    <tstamp/>
    <includepath classpath="${project.basedir}"/>
    <includepath classpath="${project.basedir}/test/"/>
    <exec command="git log -1 --pretty=format:%h" outputproperty="git.hash"/>
    <target name="main" depends="lint, phpcs, phpmd, zca, test, doc">
    </target>
    <target name="clean" description="Remove all build-related files">
        <delete dir="${project.basedir}/build"/>
    </target>
    <target name="lint" description="Run syntax check for all classes">
        <phplint haltonfailure="yes" level="verbose">
            <fileset dir="${project.basedir}/FaZend">
                <include name="**/*.php"/>
                <include name="**/*.html"/>
                <include name="**/*.phtml"/>
                <exclude name=".git/**"/>
            </fileset>
        </phplint>
    </target>
    <target name="phpcs" description="Validate the quality of PHP code with PHPCS utility">
        <exec command="phpcs
            -n
            --report=full
            --standard=Zend
            --ignore='.git/*'
            --extensions='php,phtml'
            ${project.basedir}/FaZend" escape="false" checkreturn="true" passthru="true"/>
    </target>
    <target name="phpmd" description="PHP Mess Detector (PHPMD)">
        <exec command="phpmd
            ${project.basedir}/FaZend
            text
            codesize,unusedcode
            --extensions='php,phtml'" escape="false" checkreturn="false" passthru="true"/>
    </target>
    <target name="zca" description="Zend Code Analyzer">
        <zendcodeanalyzer analyzerPath="zca" haltonwarning="false">
            <fileset dir="${project.basedir}/FaZend">
                <include name="**/*.php"/>
                <include name="**/*.phtml"/>
                <exclude name=".git/**"/>
            </fileset>
        </zendcodeanalyzer>
    </target>
    <target name="test" description="Run all existing unit-tests">
        <mkdir dir="${project.basedir}/build"/>
        <httpget url="http://packages.zendframework.com/releases/ZendFramework-1.12.3/ZendFramework-1.12.3.zip" dir="${project.basedir}/build"/>
        <delete dir="${project.basedir}/build/ZendFramework-1.12.3"/>
        <unzip file="${project.basedir}/build/ZendFramework-1.12.3.zip" todir="${project.basedir}/build" />
        <property name="coverage.database" value="${project.basedir}/build/coverage.data"/>
        <coverage-setup database="${coverage.database}">
            <fileset dir="${project.basedir}/FaZend">
                <include name="**/*.php"/>
                <exclude name=".git/**"/>
            </fileset>
        </coverage-setup>
        <phpunit printsummary="yes" haltonerror="yes" haltonfailure="yes" codecoverage="true">
            <formatter type="plain" usefile="no"/>
            <batchtest>
                <fileset dir="${project.basedir}/test">
                    <include name="**/*Test*.php"/>
                    <exclude name="**/Abstract*.php"/>
                    <exclude name="**/_*.php"/>
                    <exclude name=".git/**"/>
                </fileset>
            </batchtest>
        </phpunit>
        <mkdir dir="${project.basedir}/build/coverage"/>
        <coverage-report outfile="${project.basedir}/build/coverage.xml">
            <report todir="${project.basedir}/build/coverage"/>
        </coverage-report>
        <coverage-threshold database="${coverage.database}" perProject="0" perClass="0" perMethod="0"/>
        <delete file="${coverage.database}"/>
    </target>
    <target name="doc" description="Generate phpDocumentor files">
        <php expression="set_error_handler(create_function('', 'return true;'));"/>
        <mkdir dir="${project.basedir}/build/apidocs"/>
        <phpdoc title="API Documentation, rev.${git.hash}" destdir="${project.basedir}/build/apidocs" quiet="true" output="HTML:frames:default">
            <fileset dir="${project.basedir}/FaZend">
                <include name="**/*.php"/>
            </fileset>
        </phpdoc>
    </target>
    <target name="deploy" description="Deploy project files to web">
        <property file="${project.basedir}/../external.properties"/>
        <mkdir dir="${project.basedir}/build/ftp-upload"/>
        <copy todir="${project.basedir}/build/ftp-upload/public">
            <fileset dir="${project.basedir}/site">
                <include name="**/*"/>
            </fileset>
        </copy>
        <copy todir="${project.basedir}/build/ftp-upload/public/api">
            <fileset dir="${project.basedir}/build/apidocs">
                <include name="**/*"/>
            </fileset>
        </copy>
        <copy todir="${project.basedir}/build/ftp-upload/public/coverage">
            <fileset dir="${project.basedir}/build/coverage">
                <include name="**/*"/>
            </fileset>
        </copy>
        <echo message="uploading PHP code to the server..."/>
        <ftpdeploy host="${ftp.host}" username="${ftp.username}" password="${ftp.password}" clearfirst="true" dir="." passive="true">
            <fileset dir="${project.basedir}/build/ftp-upload"/>
        </ftpdeploy>
    </target>
</project>
